.NET Standard
@ Defines uniform set of BCL APIs for all .NET implementations
@ Reduces or even eliminates conditional compilation of shared source due to .NET APIs

* Type Forwording to make dll portable across .Net frameworks.

When choosing a .NET Standard version, you should consider this trade-off:
*     The higher the version, the more APIs are available to you.
*     The lower the version, the more platforms implement it.

You find the highest .NET Standard version you can target -> repeat following steps
1)    Target the next lower version of .NET Standard and build your project.
2)    If your project builds successfully, repeat step 1. Otherwise, retarget to the next higher version and that's the version you should use.


